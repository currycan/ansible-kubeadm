---
- name: Lvscare HA 安装
  when:
    - lb_mode == "kube-lvscare"
  block:
    - name: 添加 kube-apiserver 域名到 hosts 文件中
      ansible.builtin.blockinfile:
        path: "/etc/hosts"
        block: |-
          {% for domain in kube_master_external_domain.split(',') %}
          {% if inventory_hostname in (groups['kube_nodes'] | difference(groups['delete_nodes']) | difference(groups['kube_masters']) | unique) %}
          {{ lb_apiserver_ip }} {{ domain | trim }}
          {% elif inventory_hostname in (groups['kube_masters'] | difference(groups['delete_masters']) | difference(groups['kube_nodes']) | unique) %}
          {{ groups['kube_masters'] | difference(groups['delete_masters']) | unique | first }} {{ domain | trim }}
          {% endif %}
          {% endfor %}
        mode: 0644
        state: present
        create: true
        backup: true
        marker: "# Ansible kube-apiserver domain {mark}"

    - name: 生成 {{ lb_mode }} static pod 配置文件
      when: item.lb == lb_mode
      ansible.builtin.template:
        src: "{{ item.src }}.j2"
        dest: "{{ item.dest }}"
        mode: "0644"
      with_items:
        - { src: "kube-lvscare/lb-kube-lvscare.yaml", dest: "{{ manifest_dir }}/lb-kube-lvscare.yaml", lb: "kube-lvscare" }

    - name: 确保 kubelet 除临时配置外, 暂无其他配置
      ansible.builtin.file:
        name: "{{ item }}"
        state: absent
      with_items:
        - "{{ systemd_service_dir }}/kubelet.service.d/10-kubeadm.conf"
        - "{{ systemd_service_dir }}/kubelet.service.d/00-container-runtime.conf"
        - "{{ systemd_service_dir }}/kubelet.service.d/00-cgroup.conf"

    - name: 渲染临时 kubelet 启动文件
      ansible.builtin.template:
        src: "{{ item.src }}.j2"
        dest: "{{ item.dest }}"
        mode: "0644"
      with_items:
        - { src: "kubelet/99-kubelet-override.conf", dest: "{{ systemd_service_dir }}/kubelet.service.d/99-kubelet-override.conf" }
        - { src: "kubelet/kubelet-override-config.yml", dest: "{{ kubelet_data_dir }}/config.yaml" }

    - name: 启动 kubelet, bootstrap lb 服务
      ansible.builtin.systemd:
        name: kubelet
        daemon_reload: true
        state: restarted
        enabled: true
      register: started_kubelet
      until: started_kubelet is succeeded
      retries: 3
      delay: "{{ retry_stagger }}"

    - name: "以轮询的方式等待 {{ lb_mode }} 启动完成"
      changed_when: true
      ansible.builtin.shell: >-
        set -o pipefail;
        pgrep lvscare || exit 1
      register: lb_status
      until: lb_status.rc == 0
      retries: 8
      delay: 15

    - name: 停止 kubelet
      ansible.builtin.systemd:
        name: kubelet
        daemon_reload: true
        state: stopped
        enabled: true

    - name: 移除 kubelet 临时配置文件
      ansible.builtin.file:
        name: "{{ item }}"
        state: absent
      with_items:
        - "{{ systemd_service_dir }}/kubelet.service.d/99-kubelet-override.conf"
        - "{{ kubelet_data_dir }}/config.yaml"
        - "{{ kubelet_data_dir }}/cpu_manager_state"
        - "{{ kubelet_data_dir }}/memory_manager_state"

    - name: 渲染 kubelet 正式启动文件
      ansible.builtin.template:
        src: "{{ item.src }}.j2"
        dest: "{{ item.dest }}"
        mode: "0644"
      with_items:
        - { src: "{{ inventory_dir }}/roles/03-prepare/templates/kubelet/10-kubeadm.conf", dest: "{{ systemd_service_dir }}/kubelet.service.d/10-kubeadm.conf" }
        - { src: "{{ inventory_dir }}/roles/03-prepare/templates/kubelet/00-container-runtime.conf", dest: "{{ systemd_service_dir }}/kubelet.service.d/00-container-runtime.conf" }
        - { src: "{{ inventory_dir }}/roles/03-prepare/templates/kubelet/00-cgroup.conf", dest: "{{ systemd_service_dir }}/kubelet.service.d/00-cgroup.conf" }
