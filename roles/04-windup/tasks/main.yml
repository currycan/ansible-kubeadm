---
- name: 收尾
  when: inventory_hostname in (groups['kube_cluster'] | difference(groups['delete_masters']) | difference(groups['delete_nodes']) | unique)
  block:
  # Error from server: Get "https://10.0.1.4:10250/containerLogs/kube-system/kube-apiserver-10.0.1.4/kube-apiserver?follow=true": remote error: tls: internal error
  # 基于安全性考虑，CSR approving controllers 不会自动 approve kubelet server 证书签名请求，需要手动 approve。
  - name: 手动 approve csr
    changed_when: true
    ansible.builtin.shell: >
      set -o pipefail;
      [ `kubectl get csr | grep 'Pending' | wc -l` -ne 0 ] && \
      kubectl get csr | grep Pending | awk '{print $1}' | xargs -L 1 kubectl certificate approve|| exit 0
    environment:
      KUBECONFIG: "{{ kubernetes_etc_dir }}/admin.conf"
    args:
      executable: /bin/bash
    run_once: true
    delegate_to: "{{ groups['kube_masters'] | difference(groups['delete_masters']) | unique | first }}"

  - name: 创建 Prometheus 监控 endpoint
    when: inventory_hostname in (groups['kube_masters'] | difference(groups['delete_masters']))
    block:
    - name: 创建 endpoint 配置清单目录
      ansible.builtin.file:
        name: "{{ kubernetes_etc_dir }}/endpoint"
        state: directory
        mode: 0664

    - name: 配置核心组件的 endpoint 清单文件, 以便用于prometheus监控
      ansible.builtin.template:
        src: "endpoint/{{ item }}.j2"
        dest: "{{ kubernetes_etc_dir }}/endpoint/{{ item }}"
        mode: 0664
      with_items:
      - control-plane-ep.yml
      - data-plane-ep.yml

  - name: 创建核心组件的 endpoint
    changed_when: true
    ansible.builtin.shell: >
      kubectl apply -f {{ kubernetes_etc_dir }}/endpoint/
    environment:
      KUBECONFIG: "{{ kubernetes_etc_dir }}/admin.conf"
    register: apply_endpoint
    until: apply_endpoint.rc == 0
    retries: 3
    delay: "{{ retry_stagger }}"
    run_once: true
    delegate_to: "{{ groups['kube_masters'] | difference(groups['delete_masters']) | unique | first }}"
