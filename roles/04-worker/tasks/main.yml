- name: 确认 worker 节点是否已经加入集群
  when:
    - inventory_hostname not in (groups['kube_masters'] | difference(groups['delete_masters']) | unique)
    - inventory_hostname in (groups['kube_nodes'] | difference(groups['delete_nodes']) | unique)
  shell: >
    joined_or_not=`kubectl get nodes | grep {{ hostvars[inventory_hostname]['ansible_' + iface].ipv4.address }} | wc -l`;
    if [ $joined_or_not -eq 1 ];then
      echo true;
    else
      echo false;
    fi
  environment:
    KUBECONFIG: "{{ kubernetes_etc_dir }}/admin.conf"
  register: worker_already_joined
  delegate_to: "{{ groups['kube_masters'] | difference(groups['delete_masters']) | unique | first }}"

- block:
  # # 由于 etcd 是二进制安装, 因此需要加上配置： --config kubeadm-config.yaml
  - name: 生成 worker 节点 join token
    shell: >
      echo $(kubeadm token create --print-join-command --ttl=15m) --certificate-key $(kubeadm init phase upload-certs --upload-certs --config {{ kubernetes_etc_dir }}/kubeadm-config.yaml | sed -n '3p')
    environment:
      KUBECONFIG: "{{ kubernetes_etc_dir }}/admin.conf"
    register: worker_kubeadm_join_cmd

  - debug:
      var: worker_kubeadm_join_cmd.stdout_lines

  - name: 获取 kubeadm join 命令
    set_fact:
      worker_kubeadm_join: "{{ worker_kubeadm_join_cmd.stdout }}"
  run_once: true
  delegate_to: "{{ groups['kube_masters'] | difference(groups['delete_masters']) | unique | first }}"
  # when:
  #   - worker_already_joined.stdout is defined
  #   - not worker_already_joined.stdout | bool

- block:
  # - pause:
  #     prompt: "暂停, 手动确认继续执行, 测试用。。。"

  - debug: msg="worker 节点加入集群, 可能需要一定时间。。"
  - name: worker 节点加入集群
    shell: >
      timeout -k 3m 3m {{ worker_kubeadm_join }} \
        --node-name={{ hostvars[inventory_hostname]['ansible_' + iface].ipv4.address }} \
        --ignore-preflight-errors=all \
        --v=5
    register: worker_join_rslt
    ignore_errors: true

  - debug:
      var: worker_join_rslt.stdout_lines

  - name: 其他 worker 节点 join 是否成功
    assert:
      that: worker_join_rslt is succeeded
      msg: "节点：{{ inventory_hostname }} kubeadm join 失败"

  - name: 允许 worker 节点被调度, 设置节点标签
    when: inventory_hostname in groups['kube_nodes']
    shell: >
      [ `kubectl get nodes {{ inventory_hostname }} --show-labels | grep cloudprovider` ] && \
      kubectl taint node {{ inventory_hostname }} node.cloudprovider.kubernetes.io/uninitialized-;
      kubectl label nodes {{ inventory_hostname }} node-role.kubernetes.io/worker='' --overwrite
    # register: set_taint_worker
    # until: set_taint_worker.rc == 0
    # retries: 3
    # delay: "{{ retry_stagger }}"
    delegate_to: "{{ groups['kube_masters'] | difference(groups['delete_masters']) | unique | first }}"
  when:
    - worker_already_joined.stdout is defined
    - not worker_already_joined.stdout | bool
    - inventory_hostname not in (groups['kube_masters'] | difference(groups['delete_masters']) | unique)
    - inventory_hostname in (groups['kube_nodes'] | difference(groups['delete_nodes']) | unique)
