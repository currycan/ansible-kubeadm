---
- name: 安装集群基础依赖组件(如:coreDns、kube-proxy等)
  changed_when: true
  ansible.builtin.shell: >
    kubectl apply -R -f "{{ kubernetes_etc_dir }}/{{ item }}"
  environment:
    KUBECONFIG: "{{ kubernetes_etc_dir }}/admin.conf"
  with_items:
    - addons

- name: 安装 calico 网络插件
  when:
    - enable_calico is defined
    - enable_calico | bool
  changed_when: true
  ansible.builtin.shell: >
    helm repo add projectcalico https://docs.projectcalico.org/charts;
    helm repo update;
    helm upgrade --install calico projectcalico/tigera-operator \
      --create-namespace -n tigera-operator \
      -f {{ kubernetes_etc_dir }}/helm/calico.yaml {% if (kube_version is version('1.21.0', '<')) %}--version 3.22.5{% endif %}
  environment:
    KUBECONFIG: "{{ kubernetes_etc_dir }}/admin.conf"
  register: apply_endpoint
  until: apply_endpoint.rc == 0
  retries: 3
  delay: "{{ retry_stagger }}"

- name: 安装 metrics-server
  changed_when: true
  ansible.builtin.shell: >
    helm repo add metrics-server https://kubernetes-sigs.github.io/metrics-server/;
    helm repo update;
    helm upgrade --install metrics-server metrics-server/metrics-server -n kube-system {% if (kube_version is version('1.21.0', '<')) %}--version 3.9.0{% endif %}
  environment:
    KUBECONFIG: "{{ kubernetes_etc_dir }}/admin.conf"
  register: apply_endpoint
  until: apply_endpoint.rc == 0
  retries: 3
  delay: "{{ retry_stagger }}"

- name: 安装 nfs-subdir-external-provisioner
  changed_when: true
  ansible.builtin.shell: >
    helm repo add nfs-subdir-external-provisioner https://kubernetes-sigs.github.io/nfs-subdir-external-provisioner/;
    helm repo update;
    yum install nfs-utils rpcbind -y;
    systemctl enable --now rpcbind.service;
    systemctl enable --now nfs.service;
    mkdir -p /nfs/data;
    chown nfsnobody:nfsnobody /nfs/data;
    echo "/nfs/data {{ groups['kube_masters'] | difference(groups['delete_masters']) | unique | first }}/20(rw,sync,no_root_squash)">>/etc/exports;
    echo "/nfs/data 127.0.0.1(rw,sync,no_root_squash)">>/etc/exports;
    exportfs -rv;
    helm upgrade --install nfs-subdir-external-provisioner nfs-subdir-external-provisioner/nfs-subdir-external-provisioner \
      --namespace kube-system \
      --set nfs.server={{ groups['kube_masters'] | difference(groups['delete_masters']) | unique | first }} \
      --set nfs.path=/nfs/data \
      --set storageClass.name=nfs-storage-class \
      --set storageClass.reclaimPolicy=Delete \
      --set storageClass.accessModes=ReadWriteMany
  environment:
    KUBECONFIG: "{{ kubernetes_etc_dir }}/admin.conf"
  register: apply_endpoint
  until: apply_endpoint.rc == 0
  retries: 3
  delay: "{{ retry_stagger }}"
