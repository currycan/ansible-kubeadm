---
apiVersion: sealer.cloud/v2
kind: Cluster
metadata:
  name: my-cluster
spec:
  # image: registry.cn-hangzhou.aliyuncs.com/sealer-io/kubernetes:v1.18.20
  image: registry.cn-qingdao.aliyuncs.com/sealer-io/kubernetes:v1.19.8
  provider: BAREMETAL
  env:
    - key1=value1
  ssh:
    # ssh的登录密码，如果使用的密钥登录则无需设置
    # passwd: hatech1618
    # ssh的私钥文件绝对路径，例如/root/.ssh/id_rsa
    pk: /root/.ssh/id_ed25519
    # ssh的私钥文件密码，如果没有的话就设置为""
    pkPasswd: ""
    # ssh登录用户
    user: root
  network:
    # 使用的网卡名称
    interface: eth0
    # 网络插件
    cniName: calico
    podCIDR: 172.30.0.0/16
    svcCIDR: 172.31.0.0/16
    withoutCNI: true
  certSANS:
    - apiserver.k8s.local
    - apiserver.local.com
    - 11.11.11.11
    - 2.2.2.2
  hosts:
  - ips:
    - 172.21.139.219
    - 172.21.139.220
    - 172.21.139.221
    roles:
    - master
    - ingress
    - control-plane
    ssh:
      port: "22"
  - ips:
    - 172.21.139.222
    roles:
    - node
    - worker
    ssh:
      port: "22"
---
### 默认配置：
apiVersion: kubeadm.k8s.io/v1beta2
kind: InitConfiguration
localAPIEndpoint:
  bindPort: 6443
nodeRegistration:
  kubeletExtraArgs:
    root-dir: "/var/lib/kubelet"
    v: "3"
  criSocket: "/var/run/dockershim.sock"
  ignorePreflightErrors:
    - IsPrivilegedUser
  taints:
  - effect: NoSchedule
    key: node-role.kubernetes.io/master
skipPhases:
  - addon/coredns
---
apiVersion: kubeadm.k8s.io/v1beta2
kind: JoinConfiguration
caCertPath: /etc/kubernetes/pki/ca.crt
discovery:
  timeout: 5m0s
nodeRegistration:
  criSocket: /var/run/dockershim.sock
controlPlane:
  localAPIEndpoint:
    # advertiseAddress: "172.21.139.219"
    bindPort: 6443
---
apiVersion: kubeadm.k8s.io/v1beta2
kind: ClusterConfiguration
apiServer:
  extraArgs:
    enable-admission-plugins: "NamespaceExists,NamespaceLifecycle,LimitRanger,ServiceAccount,Priority,DefaultTolerationSeconds,DefaultStorageClass,PersistentVolumeClaimResize,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota,NodeRestriction,PersistentVolumeLabel"
    feature-gates: "RotateKubeletServerCertificate=true"
    audit-log-maxbackup: "10"
    watch-cache-sizes: "node#100,pod#1000"
    requestheader-extra-headers-prefix: "X-Remote-Extra-"
    max-mutating-requests-inflight: "500"
    api-audiences: "api,istio-ca"
    requestheader-allowed-names: ""
    audit-log-truncate-enabled: "true"
    audit-log-maxsize: "100"
    apiserver-count: "1"
    audit-log-format: json
    audit-log-maxage: '30'
    profiling: "false"
    tls-cipher-suites: "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256"
    requestheader-username-headers: "X-Remote-User"
    enable-bootstrap-token-auth: "true"
    # audit-policy-file: "/etc/kubernetes/audit/policy.yaml"
    max-requests-inflight: "1500"
    service-account-issuer: "https://kubernetes.default.svc.cluster.local"
    enable-aggregator-routing: "true"
    runtime-config=api/all: "true"
    requestheader-group-headers: "X-Remote-Group"
    allow-privileged: "true"
    v: "3"
    service-node-port-range: "30000-32767"
    service-account-signing-key-file: "/etc/kubernetes/pki/sa.key"
  extraVolumes:
    - hostPath: "/etc/localtime"
      mountPath: "/etc/localtime"
      pathType: File
      readOnly: true
      name: localtime
    - hostPath: "/etc/kubernetes/audit-policy.yml"
      mountPath: "/etc/kubernetes/audit-policy.yml"
      pathType: File
      readOnly: true
      name: audit-policy
controllerManager:
  extraArgs:
    bind-address: 127.0.0.1
    experimental-cluster-signing-duration: 876000h
    feature-gates: "RotateKubeletServerCertificate=true"
    profiling: "false"
    horizontal-pod-autoscaler-initial-readiness-delay: "30s"
    requestheader-allowed-names: ""
    concurrent-gc-syncs: "30"
    concurrent-service-syncs: "2"
    attach-detach-reconcile-sync-period: "1m0s"
    kube-api-qps: "100"
    concurrent-deployment-syncs: "10"
    horizontal-pod-autoscaler-cpu-initialization-period: "5m0s"
    service-cluster-ip-range: "172.31.0.0/16"
    kube-api-burst: "100"
    concurrent-replicaset-syncs: "10"
    cluster-name: "kubernetes"
    allocate-node-cidrs: "true"
    horizontal-pod-autoscaler-downscale-stabilization: "15m"
    cluster-cidr: "172.30.0.0/16"
    horizontal-pod-autoscaler-sync-period: "30s"
    horizontal-pod-autoscaler-tolerance: "0.1"
    v: "3"
  extraVolumes:
    - hostPath: /etc/localtime
      mountPath: /etc/localtime
      name: localtime
      readOnly: true
      pathType: File
scheduler:
  extraArgs:
    bind-address: 127.0.0.1
    feature-gates: "RotateKubeletServerCertificate=true"
    profiling: "false"
    kube-api-qps: "100"
    requestheader-allowed-names: ""
    kube-api-burst: "100"
    v: "3"
  extraVolumes:
    - hostPath: /etc/localtime
      mountPath: /etc/localtime
      name: localtime
      readOnly: true
      pathType: File
etcd:
  local:
    extraArgs:
      listen-metrics-urls: http://0.0.0.0:2381
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
# 身份验证
authentication:
  anonymous:
    enabled: false
  webhook:
    cacheTTL: 2m0s
    enabled: true
  x509:
    clientCAFile: "/etc/kubernetes/pki/ca.crt"
# 授权
authorization:
  mode: Webhook
  webhook:
    cacheAuthorizedTTL: 5m0s
    cacheUnauthorizedTTL: 30s
cgroupDriver: "systemd"
cgroupRoot: "/"
cgroupsPerQOS: true
clusterDNS:
- "172.31.0.10"
clusterDomain: "cluster.local"
configMapAndSecretChangeDetectionStrategy: Watch
containerLogMaxFiles: 10
containerLogMaxSize: 20Mi
contentType: application/vnd.kubernetes.protobuf
cpuCFSQuota: true
cpuCFSQuotaPeriod: 100ms
cpuManagerReconcilePeriod: 10s
enableContentionProfiling: true
enableControllerAttachDetach: true
enableDebuggingHandlers: true
# Node 资源驱逐策略
evictionHard:
  imagefs.available: "15%"
  memory.available: "300Mi"
  nodefs.available: "10%"
  nodefs.inodesFree: "5%"
evictionMaxPodGracePeriod: 30
evictionPressureTransitionPeriod: 5m0s
evictionSoft:
  imagefs.available: "15%"
  memory.available: "512Mi"
  nodefs.available: "15%"
  nodefs.inodesFree: "10%"
evictionSoftGracePeriod:
  imagefs.available: 3m
  memory.available: 1m
  nodefs.available: 3m
  nodefs.inodesFree: 1m
evictionMinimumReclaim: {}
failSwapOn: true
cpuManagerPolicy: none
# Node 资源预留
enforceNodeAllocatable:
- pods
# kube Cgroups
# system Cgroups
eventBurst: 10
eventRecordQPS: 5
featureGates:
  RotateKubeletServerCertificate: true
fileCheckFrequency: 20s
hairpinMode: hairpin-veth
healthzBindAddress: 127.0.0.1
# kubelet健康检查端口
httpCheckFrequency: 20s
# 镜像删除策略
imageGCHighThresholdPercent: 85
imageGCLowThresholdPercent: 80
imageMinimumGCAge: 2m0s
iptablesDropBit: 15
iptablesMasqueradeBit: 14
kubeAPIBurst: 100
kubeAPIQPS: 100
makeIPTablesUtilChains: true
maxOpenFiles: 1000000
maxPods: 100
nodeLeaseDurationSeconds: 40
nodeStatusMaxImages: 50
nodeStatusReportFrequency: 1m0s
nodeStatusUpdateFrequency: 10s
oomScoreAdj: -999
podPidsLimit: -1
# 监听地址
address: 0.0.0.0
registryBurst: 20
registryPullQPS: 5
resolvConf: /etc/resolv.conf
rotateCertificates: true
# 只能设置为 false, 否则启动报错: panic: runtime error: invalid memory address or nil pointer dereference
runOnce: false
runtimeRequestTimeout: 15m0s
serializeImagePulls: false
serverTLSBootstrap: true
staticPodPath: "/etc/kubernetes/manifests"
streamingConnectionIdleTimeout: 4h0m0s
syncFrequency: 1m0s
tlsCipherSuites:
- TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
- TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
- TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
- TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
- TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
- TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
- TLS_RSA_WITH_AES_256_GCM_SHA384
- TLS_RSA_WITH_AES_128_GCM_SHA256
volumePluginDir: /usr/libexec/kubernetes/kubelet-plugins/volume/exec/
volumeStatsAggPeriod: 1m0s
AllowedUnsafeSysctls:
- "net.core.somaxconn"
- "kernel.msg*"
kernelMemcgNotification: false
protectKernelDefaults: false
topologyManagerPolicy: "none"
topologyManagerScope: "container"
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
bindAddress: 0.0.0.0
healthzBindAddress: "127.0.0.1:10256"
metricsBindAddress: "127.0.0.1:10249"
clientConnection:
  acceptContentTypes: ""
  burst: 100
  contentType: application/vnd.kubernetes.protobuf
  qps: 100
clusterCIDR: "172.30.0.0/16"
configSyncPeriod: 10m0s
conntrack:
  maxPerCore: 655360
  min: 131072
  tcpCloseWaitTimeout: 1h0m0s
  tcpEstablishedTimeout: 24h0m0s
detectLocalMode: ""
enableProfiling: false
featureGates:
  RotateKubeletServerCertificate: true
mode: "ipvs"
iptables:
  masqueradeAll: false
  masqueradeBit: 14
  minSyncPeriod: 0s
  syncPeriod: 30s
ipvs:
  excludeCIDRs: []
  minSyncPeriod: 0s
  scheduler: "rr"
  # metalLB
  strictARP: true
nodePortAddresses: []
oomScoreAdj: -999
portRange: ""
winkernel:
  enableDSR: false
  networkName: ""
  sourceVip: ""
